#include "Timer.h" 
#include <Arduino.h>
#include <ESP8266WiFi.h>
Timer timer; 

int button = 12; //D6(gpio4)
int num_click = 0;

long number = 0; 
int num1 = 0;
int num2 = 0;
int num3 = 0;
int num4 = 0;
int timer_event = 0;

int cathode1 = 5;
int cathode2 = 4;

int cathode3 = 0;
int cathode4 = 2;

int latchPin = 15;
int clockPin = 14;
int dataPin = 13;

int count = 0;
int numbers[4] ;
int cathodePins[] = {5, 4, 0, 2};

int countering = 0;

byte table[10] {B11111100, B01100000, B11011010, B11110010, B01100110, B10110110, B10111110, B11100000, B11111110, B11110110};


void setup() {

    Serial.begin(115200); 
    pinMode(cathode4, OUTPUT);
    pinMode(cathode3, OUTPUT);
    pinMode(cathode2, OUTPUT);
    pinMode(cathode1, OUTPUT);
    pinMode(clockPin, OUTPUT);
    pinMode(latchPin, OUTPUT);
    pinMode(dataPin, OUTPUT);
    digitalWrite(cathode4, HIGH);
    digitalWrite(cathode3, HIGH);
    digitalWrite(cathode2, HIGH);
    digitalWrite(cathode1, HIGH);

    WiFi.begin("HUAWEI-m37U", "JbGDB83a");
    Serial.print("Connecting");
    while (WiFi.status() != WL_CONNECTED)
    {
    delay(500);
    Serial.print(".");
    }
    Serial.println();

    Serial.print("Connected, IP address: ");
    Serial.println(WiFi.localIP());
}

void loop() {
    timer.update();
    socketIO.loop();

    if(digitalRead(button))
    {
        Serial.println("clciked");
        num_click++;
        timer.stop(timer_event); 
        screenOff();
        separate(num_click);
        timer_event = timer.every(1, Display); 
        countering++;
        delay(200);
    }

    if(countering == 0)
    {
        timer.stop(timer_event); 
        screenOff();
        separate(0000);
        timer_event = timer.every(1, Display); 
        countering++;
    } 
  

}

void separate(long num) { 
    num1 = num / 1000;
    numbers[0] = num1;
    int num1_remove = num - (num1 * 1000);
    num2 = num1_remove / 100;
    numbers[1] = num2;
    int num2_remove = num1_remove - (num2 * 100);
    num3 = num2_remove / 10;
    numbers[2] = num3;
    num4 = num2_remove - (num3 * 10);
    numbers[3] = num4;
}

void Display() {
    screenOff(); 
    digitalWrite(latchPin, LOW); 
    shiftOut(dataPin, clockPin,LSBFIRST, table[numbers[count]]); 
    digitalWrite(cathodePins[count], LOW); 
    digitalWrite(latchPin, HIGH); 
    count++;

    if (count == 4) { 
        count = 0;
    }
}

void screenOff() { 
    digitalWrite(cathode4, HIGH);
    digitalWrite(cathode3, HIGH);
    digitalWrite(cathode2, HIGH);
    digitalWrite(cathode1, HIGH);
}